% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/HyperoptWrapper.R
\name{makeHyperoptWrapper}
\alias{makeHyperoptWrapper}
\title{Fuse learner with mlrHyperopt tuning.}
\usage{
makeHyperoptWrapper(
  learner,
  par.config = NULL,
  hyper.control = NULL,
  show.info = getMlrOptions()$show.info
)
}
\arguments{
\item{learner}{[\code{Learner}]
Learner}

\item{par.config}{[\code{\link{ParConfig}}]
The Parameter Configuration}

\item{hyper.control}{[\code{\link{HyperControl}}]
The Hyperparameter Control Object}

\item{show.info}{[\code{logical(1)}]\cr
Print verbose output on console?
Default is set via \code{\link{configureMlr}}.}
}
\value{
[\code{\link{Learner}}].
}
\description{
Fuses an mlr base learner with mlrHyperopt tuning.
Creates a learner object, which can be used like any other learner object.
If the train function is called on it, \code{\link{hyperopt}} is invoked to select an optimal set of hyperparameter values.
Finally, a model is fitted on the complete training data with these optimal hyperparameters and returned.
}
\examples{
\donttest{
task = makeClassifTask(data = iris, target = "Species")
lrn = makeLearner("classif.svm")
lrn = makeHyperoptWrapper(lrn)
mod = train(lrn, task)
print(getTuneResult(mod))
# nested resampling for evaluation
# we also extract tuned hyper pars in each iteration
r = resample(lrn, task, cv3, extract = getTuneResult)
getNestedTuneResultsX(r)
}
}
\concept{tune}
\concept{wrapper}
